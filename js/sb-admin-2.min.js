/*!
 * Start Bootstrap - SB Admin 2 v4.0.7 (https://startbootstrap.com/template-overviews/sb-admin-2)
 * Copyright 2013-2019 Start Bootstrap
 * Licensed under MIT (https://github.com/BlackrockDigital/startbootstrap-sb-admin-2/blob/master/LICENSE)
 */
//Definimos cada elemento del html la cual vamos a utilizar aca en JavaScript
const id = document.getElementById('identi')
const contra = document.getElementById('contra')
const form = document.getElementById('form')
const mensaje = document.getElementById('alert')
//La funcion validar se encarga de mirar si la contraseña es valida
function validar(contraseña, validarla, tipo){
//Comparamos la contraseña que ingresa el usuario con la que esta en la base de datos
  if(contraseña === validarla){
    //Miramos que tipo de usuario es para referencialo a la pagina correspondiente
    if(tipo === 'usuario'){
    window.location.href = 'index.php'
  }else if (tipo === 'Admin' ) {
    window.location.href = 'indexAdmin.php'
  }
  }else{
    //En el caso que no sean iguales , se manda un div alert
    mensaje.innerHTML=`<div class="alert alert-danger" role="alert">
  Contraseña Incorrecta
</div>`

  }


}

// Agarramos el form por que en el esta los campos que necesitamos (Mirar en el HTML Form), los cuales son
// es el capo de usuario (id) y la contraseña
form.addEventListener('submit', function(v){
  //Porfavor mirar los videos de youtube que le mande para que no se le dificulte
  //el addEventListener mira que accion esta por dar el usuario , en ese caso identifique el submit, que es como un click peeero al boton no mas
  v.preventDefault()
  //preventDefault es para que no recargue la pag
var data = new FormData(form)
//hacemos un nuevo formulario con los datos del Form
//Para poder mandarlos mediante el Fetch, ya que es metodo POST
  fetch('./php/login.php', {
    //Definimos el php a utilizar en ese caso es el del login, la cual contiene el sql
    method: 'POST',
    //Method es el metodo a utilziar la cual es el POST
    body: data
    //Body son como las datos que vamos a utilizar, en ese caso es data(data contiene un formulario con los datos del usuario que digita en el html)
    //Consejo: Cuando los datos a mandar no esta dentro de un formulario se envia de otra manera, en otras pagina JavaScript estara la otra manera explicada

  }
  )
  .then(dat=>{
    if(dat.ok){
      dat.json()
      .then(result=>{
        //El resultado viene como un objeto para mirarlo mejor descomentaree la siguiente linea
        // console.log(result)
        if(result[0]==null){
          //Si la respuesta es nula, es por que el usuario (Identifiacion) ingresada no existe
          mensaje.innerHTML=`<div class="alert alert-danger" role="alert">
        Usuario Incorrecto
      </div>`
        }else{


        
        //Si existe se manda a validar la contraseña
         validar(result[0].contra, contra.value, result[0].tipo)
        }
      })

}
}
).catch(function(error){
  console.log('problema con la petición Fetch:' + error.message);
})


}
)





!function(t){"use strict";t("#sidebarToggle, #sidebarToggleTop").on("click",function(o){t("body").toggleClass("sidebar-toggled"),t(".sidebar").toggleClass("toggled"),t(".sidebar").hasClass("toggled")&&t(".sidebar .collapse").collapse("hide")}),t(window).resize(function(){t(window).width()<768&&t(".sidebar .collapse").collapse("hide")}),t("body.fixed-nav .sidebar").on("mousewheel DOMMouseScroll wheel",function(o){if(768<t(window).width()){var e=o.originalEvent,l=e.wheelDelta||-e.detail;this.scrollTop+=30*(l<0?1:-1),o.preventDefault()}}),t(document).on("scroll",function(){100<t(this).scrollTop()?t(".scroll-to-top").fadeIn():t(".scroll-to-top").fadeOut()}),t(document).on("click","a.scroll-to-top",function(o){var e=t(this);t("html, body").stop().animate({scrollTop:t(e.attr("href")).offset().top},1e3,"easeInOutExpo"),o.preventDefault()})}(jQuery);
